[{"D:\\WS_projects\\netcracker_streaming_project_client\\src\\index.js":"1","D:\\WS_projects\\netcracker_streaming_project_client\\src\\reportWebVitals.js":"2","D:\\WS_projects\\netcracker_streaming_project_client\\src\\App.js":"3","D:\\WS_projects\\netcracker_streaming_project_client\\src\\components\\main_page\\header\\Header.js":"4","D:\\WS_projects\\netcracker_streaming_project_client\\src\\components\\main_page\\header\\sign_btns\\SignActions.js":"5","D:\\WS_projects\\netcracker_streaming_project_client\\src\\components\\utils\\validators.js":"6","D:\\WS_projects\\netcracker_streaming_project_client\\src\\components\\main_page\\body\\MainBody.js":"7","D:\\WS_projects\\netcracker_streaming_project_client\\src\\components\\main_page\\sign_forms\\sign_in_form\\SignInForm.js":"8","D:\\WS_projects\\netcracker_streaming_project_client\\src\\components\\main_page\\sign_forms\\sign_up_form\\SignUpForm.js":"9","D:\\WS_projects\\netcracker_streaming_project_client\\src\\components\\sign_up\\SignUpContainer.js":"10","D:\\WS_projects\\netcracker_streaming_project_client\\src\\redux\\store.js":"11","D:\\WS_projects\\netcracker_streaming_project_client\\src\\components\\main_page\\sign_forms\\sign_in_form\\withFormModal.js":"12","D:\\WS_projects\\netcracker_streaming_project_client\\src\\components\\main_page\\body\\stream_main\\search_form\\StreamSearchFormContainer.js":"13","D:\\WS_projects\\netcracker_streaming_project_client\\src\\components\\main_page\\body\\stream_main\\search_form\\StreamSearchForm.js":"14","D:\\WS_projects\\netcracker_streaming_project_client\\src\\redux\\reducers\\stream_reducer.js":"15","D:\\WS_projects\\netcracker_streaming_project_client\\src\\components\\main_page\\body\\stream_main\\streams_list\\StreamsListContainer.js":"16","D:\\WS_projects\\netcracker_streaming_project_client\\src\\components\\main_page\\body\\stream_main\\streams_list\\StreamsList.js":"17","D:\\WS_projects\\netcracker_streaming_project_client\\src\\redux\\selectors\\selectors.js":"18","D:\\WS_projects\\netcracker_streaming_project_client\\src\\components\\main_page\\body\\stream_main\\streams_list\\stream_list_item\\StreamListItem.js":"19","D:\\WS_projects\\netcracker_streaming_project_client\\src\\components\\main_page\\body\\stream_main\\streams_list\\pagination\\Pagination.js":"20","D:\\WS_projects\\netcracker_streaming_project_client\\src\\config\\config.js":"21"},{"size":488,"mtime":1607290457655,"results":"22","hashOfConfig":"23"},{"size":375,"mtime":1607288908458,"results":"24","hashOfConfig":"23"},{"size":1650,"mtime":1608135713944,"results":"25","hashOfConfig":"23"},{"size":796,"mtime":1608126815919,"results":"26","hashOfConfig":"23"},{"size":2601,"mtime":1608068240985,"results":"27","hashOfConfig":"23"},{"size":2794,"mtime":1608062615424,"results":"28","hashOfConfig":"23"},{"size":481,"mtime":1608134386786,"results":"29","hashOfConfig":"23"},{"size":2020,"mtime":1608068037687,"results":"30","hashOfConfig":"23"},{"size":7960,"mtime":1608123434574,"results":"31","hashOfConfig":"23"},{"size":327,"mtime":1608033920819,"results":"32","hashOfConfig":"23"},{"size":434,"mtime":1608133119636,"results":"33","hashOfConfig":"23"},{"size":1108,"mtime":1608030859664,"results":"34","hashOfConfig":"23"},{"size":881,"mtime":1608125813429,"results":"35","hashOfConfig":"23"},{"size":2804,"mtime":1608127334529,"results":"36","hashOfConfig":"23"},{"size":260,"mtime":1608133400380,"results":"37","hashOfConfig":"23"},{"size":1110,"mtime":1608134817784,"results":"38","hashOfConfig":"23"},{"size":621,"mtime":1608134439256,"results":"39","hashOfConfig":"23"},{"size":169,"mtime":1608132748539,"results":"40","hashOfConfig":"23"},{"size":289,"mtime":1608133358305,"results":"41","hashOfConfig":"23"},{"size":1689,"mtime":1608134615886,"results":"42","hashOfConfig":"23"},{"size":82,"mtime":1608135615110,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"15v9ol2",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\WS_projects\\netcracker_streaming_project_client\\src\\index.js",[],["95","96"],"D:\\WS_projects\\netcracker_streaming_project_client\\src\\reportWebVitals.js",[],"D:\\WS_projects\\netcracker_streaming_project_client\\src\\App.js",[],"D:\\WS_projects\\netcracker_streaming_project_client\\src\\components\\main_page\\header\\Header.js",["97"],"import React from 'react'\r\nimport {Box, Heading} from 'grommet'\r\nimport {Monitor} from 'grommet-icons'\r\nimport SignActions from './sign_btns/SignActions'\r\n\r\n\r\nexport default function Header(props) {\r\n\r\n    const elementsProps = {\r\n        headerWrapperStyle: {\r\n            tag: 'header',\r\n            direction: 'row',\r\n            justify: 'between',\r\n            pad: 'medium',\r\n            background: 'brand',\r\n            elevation: 'medium'\r\n        },\r\n        headingStyle: {\r\n            level: 1,\r\n            alignSelf: 'center'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box {...elementsProps.headerWrapperStyle}>\r\n            <Heading {...elementsProps.headingStyle}>\r\n                P2P&nbsp;SERVICE\r\n            </Heading>\r\n            <SignActions/>\r\n        </Box>\r\n    )\r\n}\r\n","D:\\WS_projects\\netcracker_streaming_project_client\\src\\components\\main_page\\header\\sign_btns\\SignActions.js",["98","99"],"import React, {useContext, useState} from 'react'\r\nimport {Anchor, Box, Button, Layer, Menu, ResponsiveContext} from 'grommet'\r\nimport {Menu as MenuIcon, UserAdd, Login} from 'grommet-icons'\r\nimport SignInForm from '../../sign_forms/sign_in_form/SignInForm'\r\nimport withFormModal from '../../sign_forms/sign_in_form/withFormModal'\r\n\r\nimport {NavLink, useHistory} from \"react-router-dom\";\r\n\r\nexport default function SignActions(props) {\r\n\r\n    //Контекст ширины экрана\r\n    const size = useContext(ResponsiveContext)\r\n\r\n    const [isSignIn, setIsSignIn] = useState(false)\r\n    const history = useHistory()\r\n\r\n    const openLogModal = () => setIsSignIn(true)\r\n    const closeLogModal = () => setIsSignIn(false)\r\n\r\n    const openSignUp = () => history.push('/sign_up')\r\n\r\n    const elementsStyles = {\r\n        signActionsWrapper: {\r\n            direction: 'row',\r\n            justify: 'end',\r\n            width: 'large'\r\n        },\r\n        signInBtn: {\r\n            default: true,\r\n            color: 'light-1',\r\n            label: 'Sign in',\r\n            pad: 'small',\r\n            margin: {left: 'small', right: 'small'}\r\n        },\r\n        signUpBtn: {\r\n            primary: true,\r\n            color: 'light-1',\r\n            label: 'Sign up',\r\n            pad: 'small',\r\n            margin: {left: 'small', right: 'small'},\r\n            fill: true\r\n        },\r\n        menu: {\r\n            dropProps: {align: {top: 'bottom', left: 'left'}},\r\n            items: [\r\n                {label: 'Sign in', icon: <Login color={'brand'}/>, gap: 'large', onClick: openLogModal},\r\n                {label: 'Sign up', icon: <UserAdd color={'brand'}/>, gap: 'large', onClick: openSignUp},\r\n            ],\r\n            icon: <MenuIcon/>\r\n        }\r\n    }\r\n\r\n    const SignInModalFormWrapped = withFormModal(SignInForm, closeLogModal)\r\n\r\n    return (\r\n        <Box {...elementsStyles.signActionsWrapper}>\r\n            {\r\n                size === 'small'\r\n                    ? <Menu {...elementsStyles.menu}/>\r\n                    : <>\r\n                        <Button {...elementsStyles.signInBtn} onClick={openLogModal}/>\r\n                        <NavLink to={'/sign_up'} style={{textDecoration: 'none'}}>\r\n                            <Button {...elementsStyles.signUpBtn}/>\r\n                        </NavLink>\r\n                    </>\r\n            }\r\n            {\r\n                isSignIn && (\r\n                    <SignInModalFormWrapped\r\n                        onSubmit={({value}) => console.log(value)}\r\n                    />\r\n                )\r\n            }\r\n        </Box>\r\n    )\r\n}","D:\\WS_projects\\netcracker_streaming_project_client\\src\\components\\utils\\validators.js",[],"D:\\WS_projects\\netcracker_streaming_project_client\\src\\components\\main_page\\body\\MainBody.js",[],"D:\\WS_projects\\netcracker_streaming_project_client\\src\\components\\main_page\\sign_forms\\sign_in_form\\SignInForm.js",["100"],"import React, {useState} from 'react'\r\n\r\nimport {\r\n    Box,\r\n    Button,\r\n    Form,\r\n    FormField,\r\n    Heading, Text,\r\n    TextInput\r\n} from 'grommet'\r\n\r\nconst elementsStyles = {\r\n    headingWrapper: {\r\n        align: 'center',\r\n        pad: {bottom: 'medium'}\r\n    },\r\n    heading: {\r\n        level: 2\r\n    },\r\n    buttonsWrapper: {\r\n        direction: 'row',\r\n        justify: 'between',\r\n        margin: {top: 'medium'}\r\n    },\r\n    formInput: {\r\n        width: 'large'\r\n    }\r\n}\r\n\r\nconst primaryValue = {\r\n    login: '',\r\n    password: ''\r\n}\r\n\r\n\r\nexport default function SignInForm(props) {\r\n\r\n    const {onSubmit} = props\r\n    const [value, setValue] = useState(primaryValue)\r\n\r\n    // Сообщение для ошибок, пришедших с сервера\r\n    const [errorMessage, setErrorMessage] = useState(undefined)\r\n\r\n    return (\r\n        <><Form\r\n            value={value}\r\n            onChange={(nextValue) => setValue(nextValue)}\r\n            onReset={() => setValue(primaryValue)}\r\n            onSubmit={onSubmit}\r\n            validate={'blur'}\r\n        >\r\n            <Box {...elementsStyles.headingWrapper}>\r\n                <Heading {...elementsStyles.heading}>SIGN IN</Heading>\r\n            </Box>\r\n            <FormField\r\n                label={'Login'}\r\n                name={'login'}\r\n                required\r\n            >\r\n                <TextInput name={'login'} {...elementsStyles.formInput}/>\r\n            </FormField>\r\n            <FormField\r\n                label={'Password'}\r\n                name={'password'}\r\n                required\r\n            >\r\n                <TextInput name={'password'} type={'password'} {...elementsStyles.formInput}/>\r\n            </FormField>\r\n            <Text>\r\n                {errorMessage}\r\n            </Text>\r\n            <Box {...elementsStyles.buttonsWrapper}>\r\n                <Button type={'submit'} label={'Log in'} primary/>\r\n                <Button type={'reset'} label={'Clear'}/>\r\n            </Box>\r\n        </Form></>\r\n    )\r\n}\r\n","D:\\WS_projects\\netcracker_streaming_project_client\\src\\components\\main_page\\sign_forms\\sign_up_form\\SignUpForm.js",["101","102","103"],"import React, {useContext, useState} from 'react'\r\nimport {\r\n    lengthValidatorCreate,\r\n    passValidate,\r\n    repeatedPassValidate\r\n} from '../../../utils/validators'\r\nimport {\r\n    Box,\r\n    Button,\r\n    Form,\r\n    FormField,\r\n    Heading, Layer, ResponsiveContext, Text,\r\n    TextInput\r\n} from 'grommet'\r\nimport {FormPreviousLink} from 'grommet-icons'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst elementsStyles = {\r\n    formWrapper: {\r\n        width: 'large',\r\n        background: 'light-6',\r\n        pad: 'large',\r\n        elevation: 'large',\r\n        round: 'small'\r\n    },\r\n    headingWrapper: {\r\n        align: 'center',\r\n        pad: {bottom: 'medium'}\r\n\r\n    },\r\n    heading: {\r\n        level: 1,\r\n        color: 'dark-3'\r\n    },\r\n    buttonsWrapper: {\r\n        direction: 'row',\r\n        justify: 'between',\r\n        margin: {top: 'large'}\r\n    },\r\n    formInput: {\r\n        width: 'large'\r\n    },\r\n    submitBtn: {},\r\n    clearBtn: {\r\n        color: 'brand'\r\n    },\r\n    backLayer: {\r\n        modal: false,\r\n        position: 'top-left',\r\n        animation: 'fadeIn'\r\n    },\r\n    backBtn: {\r\n        plain: true\r\n    }\r\n}\r\n\r\nconst primaryValue = {\r\n    login: '',\r\n    password: '',\r\n    repeatedPass: '',\r\n\r\n    first_name: '',\r\n    last_name: '',\r\n    email: '',\r\n    status: '',\r\n    avatar: ''\r\n}\r\n\r\n\r\nexport default function SignUpForm(props) {\r\n\r\n    const {onSubmit} = props\r\n    const [value, setValue] = useState(primaryValue)\r\n\r\n    //Сообщение об ошибке, пришедшей с сервера\r\n    const [validateMessage, setValidateMessage] = useState(undefined)\r\n\r\n    const [formPage, setFormPage] = useState(1)\r\n    const size = useContext(ResponsiveContext)\r\n\r\n    const passValidator = [passValidate, lengthValidatorCreate(6, 15)]\r\n    const validators = {\r\n        login: [lengthValidatorCreate(6, 15)],\r\n        password: passValidator,\r\n        repeatedPass: [repeatedPassValidate(value.password), ...passValidator]\r\n    }\r\n\r\n    function validateField(validatorsColl) {\r\n        return (validatedValue) => {\r\n            let validateResult\r\n            for(let v of validatorsColl) {\r\n                validateResult = v(validatedValue)\r\n                if(validateResult.status === 'error') {\r\n                    return validateResult\r\n                }\r\n            }\r\n            return validateResult\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                size !== 'small' &&\r\n                <Layer\r\n                    {...elementsStyles.backLayer}\r\n                >\r\n                    <Button\r\n                        {...elementsStyles.backBtn}\r\n                        icon={<NavLink to={'/'}><FormPreviousLink color={'dark-3'} size={'xlarge'}/></NavLink>}\r\n                    />\r\n                </Layer>\r\n            }\r\n            <Box\r\n                {...elementsStyles.formWrapper}\r\n                margin={{left: 'auto', right: 'auto', top: size !== 'small' ? 'medium' : 'none'}}\r\n                fill={size === 'small' || 'vertical'}\r\n            >\r\n                <Form\r\n                    value={value}\r\n                    onChange={nextValue => setValue(nextValue)}\r\n                    onReset={() => setValue(primaryValue)}\r\n                    onSubmit={onSubmit}\r\n                    validate={'blur'}\r\n                >\r\n                    {\r\n                        size === 'small' &&\r\n                        <Button\r\n                            {...elementsStyles.backBtn}\r\n                            icon={<NavLink to={'/'}><FormPreviousLink color={'dark-3'} size={'large'}/></NavLink>}\r\n                        />\r\n                    }\r\n                    <Box {...elementsStyles.headingWrapper}>\r\n                        <Heading {...elementsStyles.heading}>SIGN UP</Heading>\r\n                    </Box>\r\n                    {\r\n                        formPage === 1\r\n                            ? <>\r\n                                <FormField\r\n                                    label={'First name'}\r\n                                    name={'first_name'}\r\n                                >\r\n                                    <TextInput name={'first_name'} {...elementsStyles.formInput}/>\r\n                                </FormField>\r\n                                <FormField\r\n                                    label={'Last name'}\r\n                                    name={'last_name'}\r\n                                >\r\n                                    <TextInput name={'last_name'} {...elementsStyles.formInput}/>\r\n                                </FormField>\r\n                                <FormField\r\n                                    label={'Email'}\r\n                                    name={'email'}\r\n                                >\r\n                                    <TextInput name={'email'} type={'email'}{...elementsStyles.formInput}/>\r\n                                </FormField>\r\n                                <FormField\r\n                                    label={'Status'}\r\n                                    name={'status'}\r\n                                >\r\n                                    <TextInput name={'status'} {...elementsStyles.formInput}/>\r\n                                </FormField>\r\n                                <FormField\r\n                                    label={'Avatar'}\r\n                                    name={'avatar'}\r\n                                >\r\n                                    <TextInput name={'avatar'} {...elementsStyles.formInput}/>\r\n                                </FormField>\r\n                            </>\r\n                            : <>\r\n                                <FormField\r\n                                    label={'* Login'}\r\n                                    name={'login'}\r\n                                    required={true}\r\n                                    validate={validateField(validators.login)}\r\n                                >\r\n                                    <TextInput name={'login'} {...elementsStyles.formInput}/>\r\n                                </FormField>\r\n\r\n                                <FormField\r\n                                    label={'* Password'}\r\n                                    name={'password'}\r\n                                    required={true}\r\n                                    validate={validateField(validators.password)}\r\n                                >\r\n                                    <TextInput name={'password'} type={'password'} {...elementsStyles.formInput}/>\r\n                                </FormField>\r\n                                <FormField\r\n                                    label={'* Repeat password'}\r\n                                    name={'repeatedPass'}\r\n                                    required={true}\r\n                                    validate={validators.repeatedPass}\r\n                                >\r\n                                    <TextInput name={'repeatedPass'} type={'password'} {...elementsStyles.formInput}/>\r\n                                </FormField>\r\n                            </>\r\n                    }\r\n\r\n                    <Box {...elementsStyles.buttonsWrapper}>\r\n                        {\r\n                            formPage === 2\r\n                            &&\r\n                            <Button\r\n                                type={'submit'}\r\n                                label={'Sign up'}\r\n                                primary\r\n                            />\r\n                        }\r\n\r\n                        <Button\r\n                            label={formPage === 1 ? 'Next' : 'Back'}\r\n                            onClick={() => formPage === 1 ? setFormPage(2) : setFormPage(formPage - 1)}\r\n                            {...elementsStyles.clearBtn}\r\n                        />\r\n                    </Box>\r\n                </Form>\r\n            </Box>\r\n        </>\r\n    )\r\n}","D:\\WS_projects\\netcracker_streaming_project_client\\src\\components\\sign_up\\SignUpContainer.js",["104","105"],"import React from 'react'\r\nimport SignUpForm from '../main_page/sign_forms/sign_up_form/SignUpForm'\r\nimport {connect} from 'react-redux'\r\n\r\nfunction SignUpContainer({}) {\r\n\r\n    return <SignUpForm\r\n\r\n    />\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {}\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n\r\n})(SignUpForm)","D:\\WS_projects\\netcracker_streaming_project_client\\src\\redux\\store.js",[],"D:\\WS_projects\\netcracker_streaming_project_client\\src\\components\\main_page\\sign_forms\\sign_in_form\\withFormModal.js",[],"D:\\WS_projects\\netcracker_streaming_project_client\\src\\components\\main_page\\body\\stream_main\\search_form\\StreamSearchFormContainer.js",["106","107"],"import React, {useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport StreamSearchForm from './StreamSearchForm'\r\n\r\n\r\nfunction StreamSearchFormContainer({}) {\r\n\r\n    const categoriesColl = ['Game', 'Chatting']\r\n    const [values, setValues] = useState({\r\n        title: '',\r\n\r\n        //Должны приходить с сервера\r\n        categories: []\r\n    })\r\n\r\n    //Состояние загрузки при получении списка категорий\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    return (\r\n        <StreamSearchForm\r\n            values={values}\r\n            setValues={setValues}\r\n            loading={loading}\r\n            categoriesColl={categoriesColl}\r\n        />\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n\r\n})(StreamSearchFormContainer)","D:\\WS_projects\\netcracker_streaming_project_client\\src\\components\\main_page\\body\\stream_main\\search_form\\StreamSearchForm.js",[],"D:\\WS_projects\\netcracker_streaming_project_client\\src\\redux\\reducers\\stream_reducer.js",[],"D:\\WS_projects\\netcracker_streaming_project_client\\src\\components\\main_page\\body\\stream_main\\streams_list\\StreamsListContainer.js",["108"],"import React, {useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport StreamsList from './StreamsList'\r\nimport {\r\n    streamsListSelect,\r\n    streamsTotalCount\r\n} from '../../../../../redux/selectors/selectors'\r\n//import Pagination from './pagination/Pagination'\r\nimport {Box} from 'grommet'\r\n\r\n\r\nfunction StreamsListContainer({streamsList, streamsTotalCount}) {\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    return <Box\r\n        direction={'column'}\r\n    >\r\n        <StreamsList\r\n            streamsList={streamsList}\r\n            loading={loading}\r\n            streamsTotalCount={streamsTotalCount}\r\n        />\r\n        {\r\n            /*\r\n                <Pagination\r\n                    paginationSize={4}\r\n                    totalCount={30}\r\n                    actualPageNumber={4}\r\n                />\r\n             */\r\n        }\r\n\r\n    </Box>\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        streamsList: streamsListSelect(state),\r\n        streamsTotalCount: streamsTotalCount(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(StreamsListContainer)","D:\\WS_projects\\netcracker_streaming_project_client\\src\\components\\main_page\\body\\stream_main\\streams_list\\StreamsList.js",[],"D:\\WS_projects\\netcracker_streaming_project_client\\src\\redux\\selectors\\selectors.js",[],"D:\\WS_projects\\netcracker_streaming_project_client\\src\\components\\main_page\\body\\stream_main\\streams_list\\stream_list_item\\StreamListItem.js",["109"],"import React from 'react'\r\nimport {Box} from 'grommet'\r\n\r\nexport default function StreamListItem({}) {\r\n    return <Box\r\n        height={{min: 'small', max: 'medium'}}\r\n        width={'small'}\r\n        background={'brand'}\r\n        elevation={'medium'}\r\n        margin={'small'}\r\n    />\r\n}","D:\\WS_projects\\netcracker_streaming_project_client\\src\\components\\main_page\\body\\stream_main\\streams_list\\pagination\\Pagination.js",[],"D:\\WS_projects\\netcracker_streaming_project_client\\src\\config\\config.js",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":3,"column":9,"nodeType":"116","messageId":"117","endLine":3,"endColumn":16},{"ruleId":"114","severity":1,"message":"118","line":2,"column":9,"nodeType":"116","messageId":"117","endLine":2,"endColumn":15},{"ruleId":"114","severity":1,"message":"119","line":2,"column":30,"nodeType":"116","messageId":"117","endLine":2,"endColumn":35},{"ruleId":"114","severity":1,"message":"120","line":42,"column":26,"nodeType":"116","messageId":"117","endLine":42,"endColumn":41},{"ruleId":"114","severity":1,"message":"121","line":12,"column":40,"nodeType":"116","messageId":"117","endLine":12,"endColumn":44},{"ruleId":"114","severity":1,"message":"122","line":76,"column":12,"nodeType":"116","messageId":"117","endLine":76,"endColumn":27},{"ruleId":"114","severity":1,"message":"123","line":76,"column":29,"nodeType":"116","messageId":"117","endLine":76,"endColumn":47},{"ruleId":"114","severity":1,"message":"124","line":5,"column":10,"nodeType":"116","messageId":"117","endLine":5,"endColumn":25},{"ruleId":"125","severity":1,"message":"126","line":5,"column":26,"nodeType":"127","messageId":"128","endLine":5,"endColumn":28},{"ruleId":"125","severity":1,"message":"126","line":6,"column":36,"nodeType":"127","messageId":"128","endLine":6,"endColumn":38},{"ruleId":"114","severity":1,"message":"129","line":17,"column":21,"nodeType":"116","messageId":"117","endLine":17,"endColumn":31},{"ruleId":"114","severity":1,"message":"129","line":14,"column":21,"nodeType":"116","messageId":"117","endLine":14,"endColumn":31},{"ruleId":"125","severity":1,"message":"126","line":4,"column":40,"nodeType":"127","messageId":"128","endLine":4,"endColumn":42},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'Monitor' is defined but never used.","Identifier","unusedVar","'Anchor' is defined but never used.","'Layer' is defined but never used.","'setErrorMessage' is assigned a value but never used.","'Text' is defined but never used.","'validateMessage' is assigned a value but never used.","'setValidateMessage' is assigned a value but never used.","'SignUpContainer' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'setLoading' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]